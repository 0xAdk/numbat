### Dimensions

dimension Length
dimension Area = Length^2
dimension Volume = Length^3

dimension Time
dimension Frequency = Time^-1
dimension Speed = Length / Time
dimension Acceleration = Length / Time^2

dimension Mass
dimension Momentum = Mass * Speed
dimension Force = Mass * Acceleration = Momentum / Time
dimension Energy = Momentum^2 / Mass = Mass * Speed^2 = Force * Length
dimension Power = Energy / Time = Force * Speed
dimension Pressure = Force / Area = Energy / Volume
dimension Action = Energy * Time
dimension MassDensity = Mass / Length^3

dimension Current
dimension Charge = Current * Time
dimension Voltage = Energy / Charge = Power / Current
dimension Capacitance = Charge / Voltage
dimension Resistance = Voltage / Current

dimension Temperature

# TODO: this is a hack. Currently, dimension expressions can only contain operators and identifiers, not something like "1"
dimension Scalar = Length^0

### SI Units

unit meter: Length
unit second: Time
unit kilogram: Mass

unit hertz: Frequency = 1 / second
unit newton: Force = kilogram * meter / second^2
unit joule: Energy = newton * meter
unit watt: Power = joule / second
unit pascal: Pressure = newton / meter^2

unit ampere: Current
unit coulomb: Charge = ampere * second
unit volt: Voltage = kilogram *  meter^2 / (second^3 * ampere)
unit farad: Capacitance = coulomb / volt
unit ohm: Resistance = volt / ampere

unit kelvin : Temperature

### Imperial units

unit foot: Length = 0.3048 * meter

### Mathematical constants

let pi = 3.14159265358979323846264338327950288
let Ï€ = pi
let e = 2.71828182845904523536028747135266250

### Physical constants

let gravity = 9.80665 * meter / second^2

## Mathematical functions

# TODO: implement these as external functions?

fn sqrt<D>(x: D^2) -> D = x^(1/2)
fn sqr<D>(x: D) -> D^2 = x^2
fn exp(x: Scalar) -> Scalar = e^x
